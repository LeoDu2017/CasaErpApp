/**
 * Created by Leo on 2019/7/22 0012
 */

import React,{Component} from 'react';
import {
    View,
    Text,
    Image,
    ScrollView, StatusBar, ImageBackground,
} from 'react-native';

import {bindActionCreators} from 'redux'
import {connect} from 'react-redux'
import styles from './_styles'
import actions from './_actions'
import ModalDropdown from "../../../component/ModalDropdown";
import {customNavigationOptions} from '../../../_Util'



class Screen extends Component{
    static  navigationOptions = ({navigation}) => ({
        title: '综合统计',
        ...customNavigationOptions(navigation,
        <View style={{right:15}}>
        <ModalDropdown
        defaultValue={'2019年'}
        textStyle={{color:'#fff',fontSize:16}}
        dropdownTextStyle={{
            width:120,
            fontSize:16,
            borderBottomWidth: 1,
            borderColor: '#eee',
            textAlign: 'center'}}
        options={[
            '2019年',
            '2018年',
            '2017年',
            '2016年',
        ]}
        onSelect = {(data) => {console.log('data:',data)}}
        />
        </View>),
        headerTransparent: 'true',
        headerTintColor: '#fff',
        headerStyle :{ marginTop: 20 },

    });
    constructor(props){
        super(props);
        this._navListener = this.props.navigation.addListener('didFocus', () => {
            StatusBar.setBackgroundColor('transparent');
            StatusBar.setTranslucent(true);
            StatusBar.setBarStyle('light-content');
            //!IOS && StatusBar.setBackgroundColor('#6a51ae');
        });
    };
    componentDidMount(): void {
        const {init} = this.props;
        init.load()
    };
    render(){
        return (
            <View style={styles.container}>
                <ImageBackground
                    resizeMode={'stretch'}
                    style={styles.banner}
                    source={require('../../../assets/images/achievement/banner.png')}>
                </ImageBackground>
            </View>
        );
    };
    componentWillUnmount(): void {
        this._navListener.remove();
    };
}

export default connect(
    ({CAchievement})=>({CAchievement}),
    (dispatch) => ({init:bindActionCreators(actions, dispatch)})
)(Screen)